{
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "next/core-web-vitals",
    "plugin:prettier/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json", "./tsconfig.eslint.json"]
  },
  "plugins": [
    "prettier",
    "import",
    "@typescript-eslint",
    "jsx-a11y"
  ],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true, // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
        "project": "./tsconfig.json"
      },
      "alias": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"],
        "map": [
          ["@", "."]
        ]
      }
    }
  },
  "rules": {
    "eqeqeq": ["error", "always"],
    "no-empty-function": "error",
    "radix": "off",
    "import/prefer-default-export": "off",
    "react-hooks/exhaustive-deps": "off",
    "sort-imports": [
      "error",
      {
        "ignoreCase": false,
        "ignoreDeclarationSort": true, // don"t want to sort import lines, use eslint-plugin-import instead
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": ["none", "all", "multiple", "single"],
        "allowSeparatedGroups": true
      }
    ],
    "import/no-unresolved": "error",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          ["sibling", "parent"],
          "index",
          "unknown"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "jsx-a11y/label-has-associated-control": ["error", { "assert": "either" }]
  }
}
